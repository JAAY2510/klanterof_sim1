// MongoDB Connection
mongoose.connect('mongodb://localhost/media_platform', {
  useNewUrlParser: true,
  useUnifiedTopology: true
});

// Schemas
const AdminUserSchema = new mongoose.Schema({
  id: { type: String, default: uuidv4 },
  email: { type: String, required: true, unique: true },
  hashed_password: { type: String, required: true },
  created_at: { type: Date, default: Date.now }
});

const MediaAssetSchema = new mongoose.Schema({
  id: { type: String, default: uuidv4 },
  title: { type: String, required: true },
  type: { type: String, enum: ['video', 'audio'], required: true },
  file_url: { type: String, required: true },
  created_at: { type: Date, default: Date.now }
});

const MediaViewLogSchema = new mongoose.Schema({
  media_id: { type: String, required: true },
  viewed_by_ip: { type: String, required: true },
  timestamp: { type: Date, default: Date.now }
});

const AdminUser = mongoose.model('AdminUser', AdminUserSchema);
const MediaAsset = mongoose.model('MediaAsset', MediaAssetSchema);
const MediaViewLog = mongoose.model('MediaViewLog', MediaViewLogSchema);
